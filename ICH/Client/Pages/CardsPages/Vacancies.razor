@page "/vacancies"

@using ICH.Client.API;
@using ICH.Shared.ViewModels.Vacancy;
@using System.Text.Json;

@inject HttpClient Http
<div class="parent">
    <div class="row justify-content-around">
        <div class="col-3">
            <HxInputText InputGroupStartText="Назва посади" @bind-Value="SearchName" />
        </div>
        <div class="col-3">
            <HxSelect Data="_cities" InputGroupStartText="Місто" @bind-Value="SelectedCity" Nullable="true" NullText="Вся Україна" TItem="string" TValue="string" TextSelector="@(p => p)" ValueSelector="@(p => p)" />
        </div>
        <div class="col-3">
            <HxButton Text="Знайти" Size="ButtonSize.Regular" Color="ThemeColor.Danger" OnClick="async () => await Task.Delay(2000)" />
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-9">
            @if (_vacancies != null)
            {
                <div style="height: 800px; overflow-y: scroll;">
                    <Virtualize Items="@_vacancies" Context="vacancy">
                        @foreach (var vacancy in _vacancies)
                        {
                            <div class="row mt-2">
                                <HxCard>
                                    <BodyTemplate>
                                        <HxCardTitle style="color: cornflowerblue">@vacancy.Title</HxCardTitle>
                                        <HxCardSubtitle>@vacancy.Salary UAH</HxCardSubtitle>
                                        <HxCardSubtitle>@vacancy.Company, @vacancy.Location</HxCardSubtitle>
                                        <HxCardText>@vacancy.EmploymentType.Title, @vacancy.CreationTime.Date</HxCardText>
                                        <HxCardText>@vacancy.Description</HxCardText>
                                    </BodyTemplate>
                                </HxCard>
                            </div>
                        }
                    </Virtualize>
                </div>
            }
            else
            {
                <HxSpinner Color="ThemeColor.Primary" />
            }
        </div>
        <div class="col-3">
            <div class="row">
                <HxCheckboxList TItem="string" TValue="string" Label="Категорія" >

                </HxCheckboxList>
            </div>
        </div>
    </div>
</div>

@code {
    private ICollection<VacancyViewModel> _vacancies;
    private string SearchName { get; set; }

    private List<string> _cities;
    private string SelectedCity { get; set; }

    private List<string> _categories;
    private List<string> SelectedCategories;

    protected override async Task OnInitializedAsync()
    {
        _cities = new List<string>()
        {
            "Львів", "Київ", "Івано-Франківськ", "Вінниця"
        };

        _categories = new List<string>()
        {
            "Сфера обслу"
        };

        await GetAllVacancies();
        base.OnInitialized();
    }

    private async Task GetAllVacancies()
    {
        var response = await Http.GetAsync(VacancyGlobals.AllVacanciesUri);

        var content = await response.Content.ReadAsStringAsync();

        var vacancies = JsonSerializer.Deserialize<IEnumerable<VacancyViewModel>>(content, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });

        _vacancies = vacancies.ToList();
    }
}
