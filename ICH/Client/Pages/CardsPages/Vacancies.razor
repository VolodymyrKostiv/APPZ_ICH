@page "/vacancies"

@using ICH.Client.API;
@using ICH.Shared.ViewModels.Vacancy;
@using System.Text.Json;

@inject HttpClient Http

<div class="container">
    @if (_vacancies != null)
    {
        @foreach (var vacancy in _vacancies)
        {
            <div class="row mt-2">
                <HxCard>
                    <BodyTemplate>
                        <HxCardTitle style="color: cornflowerblue">@vacancy.Title</HxCardTitle>
                        <HxCardSubtitle>@vacancy.Salary UAH</HxCardSubtitle>
                        <HxCardSubtitle>@vacancy.Company, @vacancy.Location</HxCardSubtitle>
                        <HxCardText>@vacancy.EmploymentType.Title, @vacancy.CreationTime.Date</HxCardText>
                        <HxCardText>@vacancy.Description</HxCardText>
                    </BodyTemplate>
                </HxCard>
            </div>
        }
    }
    else
    {
        <HxSpinner Color="ThemeColor.Primary" />
    }
</div>

@code {
    private IEnumerable<VacancyViewModel> _vacancies;

    protected override async Task OnInitializedAsync()
    {
        await GetAllVacancies();
        base.OnInitialized();
    }

    private async Task GetAllVacancies()
    {
        var response = await Http.GetAsync(VacancyGlobals.AllVacanciesUri);

        var content = await response.Content.ReadAsStringAsync();

        var vacancies = JsonSerializer.Deserialize<IEnumerable<VacancyViewModel>>(content, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });

        _vacancies = vacancies;
    }
}
