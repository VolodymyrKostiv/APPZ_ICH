@page "/vacancydetails/{VacancyId:int}"

@using ICH.Client.API
@using ICH.Shared.ViewModels.Vacancy
@using System.Text.Json

@inject HttpClient Http

@if (!Downloading && VacancyDetails != null)
{
    <div class="col-6 offset-3">
        <div class="row">
            <HxCard CssClass="p-0">
                <HeaderTemplate>
                    <div style="padding: 10px; ">
                        <h3>@VacancyDetails.Title</h3>
                    </div>
                </HeaderTemplate>
                <BodyTemplate>
                    <HxCardText CssClass="m-1"><HxIcon Icon="BootstrapIcon.Calendar2DateFill" CssClass="mx-2" />Вакансія від @(VacancyDetails.CreationTime.ToString("MM/dd/yyyy"))</HxCardText>
                    <HxCardText CssClass="m-1"><HxIcon Icon="BootstrapIcon.Building" CssClass="mx-2" />@VacancyDetails.Company</HxCardText>
                        <HxCardText CssClass="m-1"><HxIcon Icon="BootstrapIcon.GeoFill" CssClass="mx-2" />@VacancyDetails.Location?.Title</HxCardText>
                        <HxCardText CssClass="m-1"><HxIcon Icon="BootstrapIcon.Check2" CssClass="mx-2" />@VacancyDetails.EmploymentType?.Title</HxCardText>
                        <HxCardText CssClass="m-1"><HxIcon Icon="BootstrapIcon.CurrencyDollar" CssClass="mx-2" />@VacancyDetails.Salary</HxCardText>
                        <HxCardTitle CssClass="mt-4 mx-2">Опис вакансії</HxCardTitle>
                        <HxCardText CssClass="mx-2">@VacancyDetails.Description</HxCardText>
                        <div class="flex-row mt-4">
                            <HxButton CssClass="mx-1" Color="ThemeColor.Primary">Відгукнутися</HxButton>
                            <HxButton CssClass="mx-1"
                                      Color="ThemeColor.Primary"
                                      Outline=true
                                      Icon="BootstrapIcon.Heart">
                                Зберегти
                            </HxButton>
                        </div>
                    </BodyTemplate>
                </HxCard>
            </div>
        </div>
}
else
{
    <div class="row justify-content-center align-items-center mt-5">
        <div class="col-4 justify-content-center align-items-center mt-5">
            <div class="row justify-content-center mt-5">
                <HxSpinner Color="ThemeColor.Primary" />
            </div>
        </div>
    </div>
}

@code
{
    [Parameter]
    public int VacancyId { get; set; }

    private bool Downloading;

    private VacancyViewModel VacancyDetails { get; set; }

    private HxModal ApplyOnVacancy;

    // private async Task Handle

    protected override async Task OnInitializedAsync()
    {
        Downloading = true;

        await GetVacancyDetails(VacancyId);

        Downloading = false;
    }

    private async Task GetVacancyDetails(int id)
    {
        var response = await Http.GetAsync(VacancyGlobals.VacanyByIdUri + '/' + id);

        var content = await response.Content.ReadFromJsonAsync<VacancyViewModel>();

        VacancyDetails = content;
    }
}
