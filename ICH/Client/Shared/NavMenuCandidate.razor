@using ICH.Client.API
@using ICH.Client.Pages

@inject NavigationManager NavigationManager
@inject ILocalStorageService Storage

<HxNavbar ColorScheme="NavbarColorScheme.Dark" Color="ThemeColor.Primary">
    <HxNavbarBrand>ICH.UA для Кандидатів</HxNavbarBrand>
    <HxNavbarToggler />
    <HxNavbarCollapse>
        <HxNav CssClass="me-auto mb-2 mb-lg-0">
            <HxNavLink Href="/vacancies">Знайти Вакансію</HxNavLink>
            <HxNavLink Href="/userinfo">Резюме</HxNavLink>
            <HxNavLink Href="/candidates">Роботодавцю ></HxNavLink>
        </HxNav>
        <div class="d-flex">
            @if (!IsUserLoggined)
            {
                <HxButton CssClass="align-self-end"
                          Icon="BootstrapIcon.BoxArrowInRight"
                          Outline="true"
                          OnClick="OnLogin"
                          Color="ThemeColor.Light">Увійти</HxButton>
            }
            else
            {
                <HxDropdown>
                    <HxDropdownToggleElement ElementName="div" CssClass="bg-primary p-1 text-white me-2" role="button">
                        <HxIcon Icon="BootstrapIcon.PersonFill" />
                    </HxDropdownToggleElement>
                    <HxDropdownMenu Alignment="DropdownMenuAlignment.End">
                        <HxDropdownItemNavLink Href="/userinfo">Профіль</HxDropdownItemNavLink>
                        <HxDropdownDivider />
                        <HxDropdownItem OnClick="OnLogin">
                            <div class="flex">
                                <HxIcon Icon="BootstrapIcon.BoxArrowLeft" CssClass="me-2" />Вийти
                            </div>
                        </HxDropdownItem>
                    </HxDropdownMenu>
                </HxDropdown>
            }
        </div>
    </HxNavbarCollapse>
</HxNavbar>

@code
{
    private UserStorageService _userStorageService;
    private bool IsUserLoggined;

    protected override async Task OnInitializedAsync()
    {
        _userStorageService = new UserStorageService(Storage);

        var loginned = await _userStorageService.IsUserLoginned();
        IsUserLoggined = loginned;
    }

    private async Task OnLogin()
    {
        await _userStorageService.ExitUser();
        NavigationManager.NavigateTo(LoginLinks.Login);
    }
}
